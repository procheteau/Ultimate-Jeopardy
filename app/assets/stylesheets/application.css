/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 *= require foundation_and_overrides

 */

img {
  float:left;
  margin-left: 0;
  height: 45px;
}

.top-bar, .top-bar a {
  background-color: black;
  font-family: 'Bungee Outline', cursive;
  color: #FFFFFF;
  font-size: 25px;
  white-space: nowrap;
}

@media only screen and (min-width: 40.0625em) {

  .top-bar-section li:not(.has-form) a:not(.button) {
    background: black;
    font-family: 'Bungee Outline', cursive;
    font-size: 16px;
  }

  .top-bar-section ul {
    display: flex;
    align-items: center;
  }

}

.main-menu{
  height: 100%;
  width: 100%;
  background-image: url(/assets/jeopardy-white.jpg);
  background-size: cover;
}

.menu-block{
  height: 580px;
  width: 380px;
  background: rgba(250, 250, 255,0.8);
  float: right;
  margin-right: 60px;
  margin-top: 20px;
  position: relative;
  border-radius: 25px;
  box-shadow: 12px 12px 5px #273469;
}

.menu-row{
  margin-left: auto;
  margin-right: auto;
  display: flex;
}

.menu-button{
  background-color: #FAFAFF;
  height: 120px;
  width: 200px;
  box-shadow: 5px 5px 10px #273469;
  margin: 18px;
  border-radius: 20px;
  opacity: 1.0;
  text-align: center;
}

.menu-button:hover{
  background-color: #E4D9FF;
}

.menu-button i{
 font-size: 42px;
 color: #273469;
 margin-top: 20px;
 margin-bottom: 5px;
}

.menu-description{
  background-color: #FAFAFF;
  height: max-content;
  width: 350px;
  border-radius: 20px;
  margin: auto;
}

.menu-block h3{
  margin-top: 10px;
  margin-left: 15px;
  margin-bottom: 1px;
  font-weight: bold;
  color: #273469;
  font-family: 'Saira Extra Condensed', sans-serif;
}

.menu-block p{
  margin-left: 15px;
  margin-right: 15px;
  font-family: 'Saira Extra Condensed', sans-serif;
  font-size: 20px;
}

.game{
  height: 100%;
  width: 100%;
  padding-top: 30px;
  background: linear-gradient(white,#273469);
  background: -webkit-linear-gradient(white,#273469);
  background: -o-linear-gradient(white,#273469);
  background: -moz-linear-gradient(white,#273469);
}

.jeopardy-table{
  width: 100%;
}

.jeopardy-table table{
  margin: 0 auto;
  background-color: white;
  border-color: black;
  border-style: solid;
}

th {
  height: 150px;
  width: 150px;
  background-color: #1E2749;
}

.value {
  height: 150px;
  width: 150px;
  background-color: #1E2749;
}

.value:hover{
  background-color: #273469;
}
.value:hover p{
  font-size: 43px;
}

th p{
  text-align: center;
  font-family: 'Bungee', cursive;
  text-shadow: 5px 5px 5px black;
  color: white;
}

td p{
  text-align: center;
  font-family: 'Bungee', cursive;
  color: yellow;
  text-shadow: 5px 5px 5px black;
  font-size: 40px;
}

.score{
  display: flex;
  justify-content: center;
  margin-top: 20px;
}

.score p{
  font-family: 'Bungee', cursive;
  font-size: 45px;
  color: white;
  margin-right: 15px;
  text-shadow: 5px 5px 5px black;
}

.score-box{
  border-color: white;
  border-style: solid;
  background-color: black;
  border-width: thick;
}

.score-box p{
  font-family: 'Bungee', cursive;
  text-align: center;
  color: white;
  margin-left: 10px;
  margin-top: auto;
  margin-bottom: auto;
}

@-webkit-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
@-moz-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
@keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
.fade-in {
	opacity:0;  /* make things invisible upon start */
	-webkit-animation:fadeIn ease-in 1;  /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
	-moz-animation:fadeIn ease-in 1;
	animation:fadeIn ease-in 1;

	-webkit-animation-fill-mode:forwards;  /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
	-moz-animation-fill-mode:forwards;
	animation-fill-mode:forwards;

	-webkit-animation-duration:1s;
	-moz-animation-duration:1s;
	animation-duration:1s;
}

.fade-in.one{
-webkit-animation-delay: 0.1s;
-moz-animation-delay: 0.1s;
animation-delay: 0.1s;
}
.fade-in.two{
-webkit-animation-delay: 0.2s;
-moz-animation-delay: 0.2s;
animation-delay: 0.2s;
}
.fade-in.three{
-webkit-animation-delay: 0.3s;
-moz-animation-delay: 0.3s;
animation-delay: 0.3s;
}
.fade-in.four{
-webkit-animation-delay: 0.4s;
-moz-animation-delay: 0.4s;
animation-delay: 0.4s;
}
.fade-in.five{
-webkit-animation-delay: 0.5s;
-moz-animation-delay: 0.5s;
animation-delay: 0.5s;
}
